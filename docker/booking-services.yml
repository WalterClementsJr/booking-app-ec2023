version: '3.8'

services:
  eureka-server:
    build:
      context: ../eureka-server/
      dockerfile: Dockerfile
      args:
        JAVA_IMAGE: ${JAVA_IMAGE}
        ARTIFACT: ${EUREKA_ARTIFACT}
        TAG: ${EUREKA_SERVICE_TAG}
    ports:
      - "9876:9876"
    volumes:
      - booking-volume:/root/booking/${EUREKA_ARTIFACT}
      - ../${EUREKA_ARTIFACT}/target/:/root/booking/${EUREKA_ARTIFACT}
    entrypoint: java -jar /root/booking/${EUREKA_ARTIFACT}/${EUREKA_ARTIFACT}-${EUREKA_SERVICE_TAG}.jar &

  booking-api-gw:
    build:
      context: ../booking-api-gw/
      dockerfile: Dockerfile
      args:
        JAVA_IMAGE: ${JAVA_IMAGE}
        ARTIFACT: ${APIGW_ARTIFACT}
        TAG: ${APIGW_SERVICE_TAG}
    ports:
      - "9090:9090"
    volumes:
      - booking-volume:/root/booking/${APIGW_ARTIFACT}
      - ../${APIGW_ARTIFACT}/target/:/root/booking/${APIGW_ARTIFACT}
    entrypoint: java -jar /root/booking/${APIGW_ARTIFACT}/${APIGW_ARTIFACT}-${APIGW_SERVICE_TAG}.jar &

  booking-user-service:
    build:
      context: ../booking-user-service/
      dockerfile: Dockerfile
      args:
        JAVA_IMAGE: ${JAVA_IMAGE}
        ARTIFACT: ${USER_ARTIFACT}
        TAG: ${USER_SERVICE_TAG}
    ports:
      - "9091:9091"
    volumes:
      - booking-volume:/root/booking/${USER_ARTIFACT}
      - ../${USER_ARTIFACT}/target/:/root/booking/${USER_ARTIFACT}
    environment:
      SPRING_APPLICATION_JSON: '{
          "spring.datasource.url": "jdbc:postgresql://host.docker.internal:5432/booking",
          "spring.zipkin.base-url": "http://host.docker.internal:9411/",
          "eureka.client.service-url.default-zone": "http://localhost:9876/eureka"
        }'
    entrypoint: java -jar /root/booking/${USER_ARTIFACT}/${USER_ARTIFACT}-${USER_SERVICE_TAG}.jar &

  booking-room-service:
    build:
      context: ../booking-room-service/
      dockerfile: Dockerfile
      args:
        JAVA_IMAGE: ${JAVA_IMAGE}
        ARTIFACT: ${ROOM_ARTIFACT}
        TAG: ${ROOM_SERVICE_TAG}
    ports:
      - "9092:9092"
    volumes:
      - booking-volume:/root/booking/${ROOM_ARTIFACT}
      - ../${ROOM_ARTIFACT}/target/:/root/booking/${ROOM_ARTIFACT}
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url": "jdbc:postgresql://host.docker.internal:5433/booking",
        "spring.zipkin.base-url": "http://host.docker.internal:9411/",
        "eureka.client.service-url.default-zone": "http://host.docker.internal:9876/eureka"
      }'
    entrypoint: java -jar /root/booking/${ROOM_ARTIFACT}/${ROOM_ARTIFACT}-${ROOM_SERVICE_TAG}.jar &

  booking-financial-service:
    build:
      context: ../booking-financial-service/
      dockerfile: Dockerfile
      args:
        JAVA_IMAGE: ${JAVA_IMAGE}
        ARTIFACT: ${FIN_ARTIFACT}
        TAG: ${FIN_SERVICE_TAG}
    ports:
      - "9093:9093"
    volumes:
      - booking-volume:/root/booking/${FIN_ARTIFACT}
      - ../${FIN_ARTIFACT}/target/:/root/booking/${FIN_ARTIFACT}
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url": "jdbc:postgresql://host.docker.internal:5433/booking",
        "spring.zipkin.base-url": "http://host.docker.internal:9411/",
        "spring.kafka.bootstrap-server": "host.docker.internal:29092",
        "eureka.client.service-url.default-zone": "http://localhost:9876/eureka",
      }'
    entrypoint: java -jar /root/booking/${FIN_ARTIFACT}/${FIN_ARTIFACT}-${FIN_SERVICE_TAG}.jar &

networks:
  booking-network:
    external: true
    name: booking-network

volumes:
  booking-volume:
